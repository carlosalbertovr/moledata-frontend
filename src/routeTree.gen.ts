/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as SigninIndexImport } from './routes/signin/index'
import { Route as SigninLayoutImport } from './routes/signin/_layout'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedSettingsLayoutImport } from './routes/_authenticated/settings/_layout'
import { Route as SigninLayoutUserTypeIndexImport } from './routes/signin/_layout.user-type/index'
import { Route as SigninLayoutUserRegisterIndexImport } from './routes/signin/_layout.user-register/index'
import { Route as AuthenticatedSettingsLayoutTeamsIndexImport } from './routes/_authenticated/settings/_layout.teams/index'
import { Route as AuthenticatedSettingsLayoutProjectsIndexImport } from './routes/_authenticated/settings/_layout.projects/index'
import { Route as AuthenticatedSettingsLayoutMembersIndexImport } from './routes/_authenticated/settings/_layout.members/index'
import { Route as AuthenticatedSettingsLayoutHomeIndexImport } from './routes/_authenticated/settings/_layout.home/index'
import { Route as AuthenticatedSettingsLayoutFormsIndexImport } from './routes/_authenticated/settings/_layout.forms/index'
import { Route as AuthenticatedSettingsLayoutDashboardsIndexImport } from './routes/_authenticated/settings/_layout.dashboards/index'

// Create Virtual Routes

const SigninImport = createFileRoute('/signin')()
const AuthenticatedSettingsImport = createFileRoute(
  '/_authenticated/settings',
)()

// Create/Update Routes

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const SigninIndexRoute = SigninIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SigninRoute,
} as any)

const SigninLayoutRoute = SigninLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => SigninRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any,
)

const AuthenticatedSettingsLayoutRoute =
  AuthenticatedSettingsLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)

const SigninLayoutUserTypeIndexRoute = SigninLayoutUserTypeIndexImport.update({
  id: '/user-type/',
  path: '/user-type/',
  getParentRoute: () => SigninLayoutRoute,
} as any)

const SigninLayoutUserRegisterIndexRoute =
  SigninLayoutUserRegisterIndexImport.update({
    id: '/user-register/',
    path: '/user-register/',
    getParentRoute: () => SigninLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutTeamsIndexRoute =
  AuthenticatedSettingsLayoutTeamsIndexImport.update({
    id: '/teams/',
    path: '/teams/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutProjectsIndexRoute =
  AuthenticatedSettingsLayoutProjectsIndexImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutMembersIndexRoute =
  AuthenticatedSettingsLayoutMembersIndexImport.update({
    id: '/members/',
    path: '/members/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutHomeIndexRoute =
  AuthenticatedSettingsLayoutHomeIndexImport.update({
    id: '/home/',
    path: '/home/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutFormsIndexRoute =
  AuthenticatedSettingsLayoutFormsIndexImport.update({
    id: '/forms/',
    path: '/forms/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

const AuthenticatedSettingsLayoutDashboardsIndexRoute =
  AuthenticatedSettingsLayoutDashboardsIndexImport.update({
    id: '/dashboards/',
    path: '/dashboards/',
    getParentRoute: () => AuthenticatedSettingsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signin/_layout': {
      id: '/signin/_layout'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninLayoutImport
      parentRoute: typeof SigninRoute
    }
    '/signin/': {
      id: '/signin/'
      path: '/'
      fullPath: '/signin/'
      preLoaderRoute: typeof SigninIndexImport
      parentRoute: typeof SigninImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/_layout': {
      id: '/_authenticated/settings/_layout'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/signin/_layout/user-register/': {
      id: '/signin/_layout/user-register/'
      path: '/user-register'
      fullPath: '/signin/user-register'
      preLoaderRoute: typeof SigninLayoutUserRegisterIndexImport
      parentRoute: typeof SigninLayoutImport
    }
    '/signin/_layout/user-type/': {
      id: '/signin/_layout/user-type/'
      path: '/user-type'
      fullPath: '/signin/user-type'
      preLoaderRoute: typeof SigninLayoutUserTypeIndexImport
      parentRoute: typeof SigninLayoutImport
    }
    '/_authenticated/settings/_layout/dashboards/': {
      id: '/_authenticated/settings/_layout/dashboards/'
      path: '/dashboards'
      fullPath: '/settings/dashboards'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutDashboardsIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
    '/_authenticated/settings/_layout/forms/': {
      id: '/_authenticated/settings/_layout/forms/'
      path: '/forms'
      fullPath: '/settings/forms'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutFormsIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
    '/_authenticated/settings/_layout/home/': {
      id: '/_authenticated/settings/_layout/home/'
      path: '/home'
      fullPath: '/settings/home'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutHomeIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
    '/_authenticated/settings/_layout/members/': {
      id: '/_authenticated/settings/_layout/members/'
      path: '/members'
      fullPath: '/settings/members'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutMembersIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
    '/_authenticated/settings/_layout/projects/': {
      id: '/_authenticated/settings/_layout/projects/'
      path: '/projects'
      fullPath: '/settings/projects'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutProjectsIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
    '/_authenticated/settings/_layout/teams/': {
      id: '/_authenticated/settings/_layout/teams/'
      path: '/teams'
      fullPath: '/settings/teams'
      preLoaderRoute: typeof AuthenticatedSettingsLayoutTeamsIndexImport
      parentRoute: typeof AuthenticatedSettingsLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsLayoutRouteChildren {
  AuthenticatedSettingsLayoutDashboardsIndexRoute: typeof AuthenticatedSettingsLayoutDashboardsIndexRoute
  AuthenticatedSettingsLayoutFormsIndexRoute: typeof AuthenticatedSettingsLayoutFormsIndexRoute
  AuthenticatedSettingsLayoutHomeIndexRoute: typeof AuthenticatedSettingsLayoutHomeIndexRoute
  AuthenticatedSettingsLayoutMembersIndexRoute: typeof AuthenticatedSettingsLayoutMembersIndexRoute
  AuthenticatedSettingsLayoutProjectsIndexRoute: typeof AuthenticatedSettingsLayoutProjectsIndexRoute
  AuthenticatedSettingsLayoutTeamsIndexRoute: typeof AuthenticatedSettingsLayoutTeamsIndexRoute
}

const AuthenticatedSettingsLayoutRouteChildren: AuthenticatedSettingsLayoutRouteChildren =
  {
    AuthenticatedSettingsLayoutDashboardsIndexRoute:
      AuthenticatedSettingsLayoutDashboardsIndexRoute,
    AuthenticatedSettingsLayoutFormsIndexRoute:
      AuthenticatedSettingsLayoutFormsIndexRoute,
    AuthenticatedSettingsLayoutHomeIndexRoute:
      AuthenticatedSettingsLayoutHomeIndexRoute,
    AuthenticatedSettingsLayoutMembersIndexRoute:
      AuthenticatedSettingsLayoutMembersIndexRoute,
    AuthenticatedSettingsLayoutProjectsIndexRoute:
      AuthenticatedSettingsLayoutProjectsIndexRoute,
    AuthenticatedSettingsLayoutTeamsIndexRoute:
      AuthenticatedSettingsLayoutTeamsIndexRoute,
  }

const AuthenticatedSettingsLayoutRouteWithChildren =
  AuthenticatedSettingsLayoutRoute._addFileChildren(
    AuthenticatedSettingsLayoutRouteChildren,
  )

interface AuthenticatedSettingsRouteChildren {
  AuthenticatedSettingsLayoutRoute: typeof AuthenticatedSettingsLayoutRouteWithChildren
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteChildren: AuthenticatedSettingsRouteChildren = {
  AuthenticatedSettingsLayoutRoute:
    AuthenticatedSettingsLayoutRouteWithChildren,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
}

const AuthenticatedSettingsRouteWithChildren =
  AuthenticatedSettingsRoute._addFileChildren(
    AuthenticatedSettingsRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSettingsRoute: AuthenticatedSettingsRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface SigninLayoutRouteChildren {
  SigninLayoutUserRegisterIndexRoute: typeof SigninLayoutUserRegisterIndexRoute
  SigninLayoutUserTypeIndexRoute: typeof SigninLayoutUserTypeIndexRoute
}

const SigninLayoutRouteChildren: SigninLayoutRouteChildren = {
  SigninLayoutUserRegisterIndexRoute: SigninLayoutUserRegisterIndexRoute,
  SigninLayoutUserTypeIndexRoute: SigninLayoutUserTypeIndexRoute,
}

const SigninLayoutRouteWithChildren = SigninLayoutRoute._addFileChildren(
  SigninLayoutRouteChildren,
)

interface SigninRouteChildren {
  SigninLayoutRoute: typeof SigninLayoutRouteWithChildren
  SigninIndexRoute: typeof SigninIndexRoute
}

const SigninRouteChildren: SigninRouteChildren = {
  SigninLayoutRoute: SigninLayoutRouteWithChildren,
  SigninIndexRoute: SigninIndexRoute,
}

const SigninRouteWithChildren =
  SigninRoute._addFileChildren(SigninRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signin': typeof SigninLayoutRouteWithChildren
  '/signin/': typeof SigninIndexRoute
  '/settings': typeof AuthenticatedSettingsLayoutRouteWithChildren
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/signin/user-register': typeof SigninLayoutUserRegisterIndexRoute
  '/signin/user-type': typeof SigninLayoutUserTypeIndexRoute
  '/settings/dashboards': typeof AuthenticatedSettingsLayoutDashboardsIndexRoute
  '/settings/forms': typeof AuthenticatedSettingsLayoutFormsIndexRoute
  '/settings/home': typeof AuthenticatedSettingsLayoutHomeIndexRoute
  '/settings/members': typeof AuthenticatedSettingsLayoutMembersIndexRoute
  '/settings/projects': typeof AuthenticatedSettingsLayoutProjectsIndexRoute
  '/settings/teams': typeof AuthenticatedSettingsLayoutTeamsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signin': typeof SigninIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/signin/user-register': typeof SigninLayoutUserRegisterIndexRoute
  '/signin/user-type': typeof SigninLayoutUserTypeIndexRoute
  '/settings/dashboards': typeof AuthenticatedSettingsLayoutDashboardsIndexRoute
  '/settings/forms': typeof AuthenticatedSettingsLayoutFormsIndexRoute
  '/settings/home': typeof AuthenticatedSettingsLayoutHomeIndexRoute
  '/settings/members': typeof AuthenticatedSettingsLayoutMembersIndexRoute
  '/settings/projects': typeof AuthenticatedSettingsLayoutProjectsIndexRoute
  '/settings/teams': typeof AuthenticatedSettingsLayoutTeamsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signin': typeof SigninRouteWithChildren
  '/signin/_layout': typeof SigninLayoutRouteWithChildren
  '/signin/': typeof SigninIndexRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/_authenticated/settings/_layout': typeof AuthenticatedSettingsLayoutRouteWithChildren
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/signin/_layout/user-register/': typeof SigninLayoutUserRegisterIndexRoute
  '/signin/_layout/user-type/': typeof SigninLayoutUserTypeIndexRoute
  '/_authenticated/settings/_layout/dashboards/': typeof AuthenticatedSettingsLayoutDashboardsIndexRoute
  '/_authenticated/settings/_layout/forms/': typeof AuthenticatedSettingsLayoutFormsIndexRoute
  '/_authenticated/settings/_layout/home/': typeof AuthenticatedSettingsLayoutHomeIndexRoute
  '/_authenticated/settings/_layout/members/': typeof AuthenticatedSettingsLayoutMembersIndexRoute
  '/_authenticated/settings/_layout/projects/': typeof AuthenticatedSettingsLayoutProjectsIndexRoute
  '/_authenticated/settings/_layout/teams/': typeof AuthenticatedSettingsLayoutTeamsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signin'
    | '/signin/'
    | '/settings'
    | '/settings/'
    | '/signin/user-register'
    | '/signin/user-type'
    | '/settings/dashboards'
    | '/settings/forms'
    | '/settings/home'
    | '/settings/members'
    | '/settings/projects'
    | '/settings/teams'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signin'
    | '/settings'
    | '/signin/user-register'
    | '/signin/user-type'
    | '/settings/dashboards'
    | '/settings/forms'
    | '/settings/home'
    | '/settings/members'
    | '/settings/projects'
    | '/settings/teams'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signin'
    | '/signin/_layout'
    | '/signin/'
    | '/_authenticated/settings'
    | '/_authenticated/settings/_layout'
    | '/_authenticated/settings/'
    | '/signin/_layout/user-register/'
    | '/signin/_layout/user-type/'
    | '/_authenticated/settings/_layout/dashboards/'
    | '/_authenticated/settings/_layout/forms/'
    | '/_authenticated/settings/_layout/home/'
    | '/_authenticated/settings/_layout/members/'
    | '/_authenticated/settings/_layout/projects/'
    | '/_authenticated/settings/_layout/teams/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SigninRoute: typeof SigninRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SigninRoute: SigninRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/forgot-password",
        "/login",
        "/reset-password",
        "/signin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/settings"
      ]
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/signin": {
      "filePath": "signin",
      "children": [
        "/signin/_layout",
        "/signin/"
      ]
    },
    "/signin/_layout": {
      "filePath": "signin/_layout.tsx",
      "parent": "/signin",
      "children": [
        "/signin/_layout/user-register/",
        "/signin/_layout/user-type/"
      ]
    },
    "/signin/": {
      "filePath": "signin/index.tsx",
      "parent": "/signin"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/_layout",
        "/_authenticated/settings/"
      ]
    },
    "/_authenticated/settings/_layout": {
      "filePath": "_authenticated/settings/_layout.tsx",
      "parent": "/_authenticated/settings",
      "children": [
        "/_authenticated/settings/_layout/dashboards/",
        "/_authenticated/settings/_layout/forms/",
        "/_authenticated/settings/_layout/home/",
        "/_authenticated/settings/_layout/members/",
        "/_authenticated/settings/_layout/projects/",
        "/_authenticated/settings/_layout/teams/"
      ]
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/signin/_layout/user-register/": {
      "filePath": "signin/_layout.user-register/index.tsx",
      "parent": "/signin/_layout"
    },
    "/signin/_layout/user-type/": {
      "filePath": "signin/_layout.user-type/index.tsx",
      "parent": "/signin/_layout"
    },
    "/_authenticated/settings/_layout/dashboards/": {
      "filePath": "_authenticated/settings/_layout.dashboards/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    },
    "/_authenticated/settings/_layout/forms/": {
      "filePath": "_authenticated/settings/_layout.forms/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    },
    "/_authenticated/settings/_layout/home/": {
      "filePath": "_authenticated/settings/_layout.home/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    },
    "/_authenticated/settings/_layout/members/": {
      "filePath": "_authenticated/settings/_layout.members/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    },
    "/_authenticated/settings/_layout/projects/": {
      "filePath": "_authenticated/settings/_layout.projects/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    },
    "/_authenticated/settings/_layout/teams/": {
      "filePath": "_authenticated/settings/_layout.teams/index.tsx",
      "parent": "/_authenticated/settings/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
